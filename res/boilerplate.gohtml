<!DOCTYPE html>
<html lang="">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    {{/* TODO: Fill out for SEO */}}
    <title>{{.Title}}</title>
    <script src="wasm_exec.js"></script>
    <style>
        /*
         * Global CSS style reset
         * Based on: https://www.joshwcomeau.com/css/custom-css-reset/
         */

        /*  Use a more-intuitive box-sizing model. */
        *, *::before, *::after {
            box-sizing: border-box;
        }

        /* Remove default margin */
        * {
            margin: 0;
            padding: 0; /* remove? */
        }

        /* Display everything using flexbox mode */
        body *:not(script) {
            display: flex;
        }

        /* Add accessible line-height & improve text rendering */
        body {
            line-height: calc(1em + 0.5rem);
            -webkit-font-smoothing: antialiased;
            font-family: Arial, sans-serif;
        }

        /* Improve media defaults */
        img, picture, video, canvas, svg {
            display: block;
            max-width: 100%;
        }

        /* Remove built-in form typography styles */
        input, button, textarea, select {
            font: inherit;
        }

        /* Avoid text overflows */
        p, h1, h2, h3, h4, h5, h6 {
            overflow-wrap: break-word;
        }

        /* Create a root stacking context */
        #root, #__next {
            isolation: isolate;
        }

        {{/* Include generated CSS */}}
        {{.CSS}}
    </style>
</head>
<body>
{{/*Include generated HTML*/}}
{{.HTML}}
<script>
    const go = new Go(); // Defined in wasm_exec.js
    const WASM_URL = 'main.wasm';
    let wasm;

    if ('instantiateStreaming' in WebAssembly) {
        WebAssembly.instantiateStreaming(fetch(WASM_URL), go.importObject).then(function (obj) {
            wasm = obj.instance;
            go.run(wasm);
        })
    } else {
        fetch(WASM_URL).then(resp =>
            resp.arrayBuffer()
        ).then(bytes =>
            WebAssembly.instantiate(bytes, go.importObject).then(function (obj) {
                wasm = obj.instance;
                go.run(wasm);
            })
        )
    }
</script>
</body>
</html>